<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btc.demo.dao.BTCDefaultUTXOMapper">
  <resultMap id="BaseResultMap" type="com.btc.demo.domain.BTCDefaultUTXO">
    <id column="txid" jdbcType="CHAR" property="txid" />
    <id column="vout" jdbcType="INTEGER" property="vout" />
    <result column="count" jdbcType="DECIMAL" property="count" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="sync_time" jdbcType="TIMESTAMP" property="syncTime" />
    <result column="block_height" jdbcType="INTEGER" property="blockHeight" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="spend_txid" jdbcType="CHAR" property="spendTxid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.btc.demo.domain.BTCDefaultUTXO">
    <result column="script_pub_key" jdbcType="LONGVARCHAR" property="scriptPubKey" />
  </resultMap>
  <sql id="Base_Column_List">
    txid, vout, count, address, sync_time, block_height, status, spend_txid
  </sql>
  <sql id="Blob_Column_List">
    script_pub_key
  </sql>



  <insert id="insertBatch" parameterType="List">

    insert into btc_default_utxo (txid, vout, count,
                                  address, sync_time, block_height,
                                  status, spend_txid, script_pub_key
    )
            VALUES
    <foreach collection="defaultUTXOList" item="utxo" open="(" separator="," close=")" >
      #{utxo.txid}, #{utxo.vout}, #{utxo.count},
      #{utxo.address}, #{utxo.syncTime}, #{utxo.blockHeight},
      #{utxo.status}, #{utxo.spendTxid}, #{utxo.scriptPubKey}
    </foreach>

  </insert>






  <select id="selectByPrimaryKey" parameterType="com.btc.demo.domain.BTCDefaultUTXOKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from btc_default_utxo
    where txid = #{txid,jdbcType=CHAR}
      and vout = #{vout,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.btc.demo.domain.BTCDefaultUTXOKey">
    delete from btc_default_utxo
    where txid = #{txid,jdbcType=CHAR}
      and vout = #{vout,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.btc.demo.domain.BTCDefaultUTXO">
    insert into btc_default_utxo (txid, vout, count, 
      address, sync_time, block_height, 
      status, spend_txid, script_pub_key
      )
    values (#{txid,jdbcType=CHAR}, #{vout,jdbcType=INTEGER}, #{count,jdbcType=DECIMAL}, 
      #{address,jdbcType=CHAR}, #{syncTime,jdbcType=TIMESTAMP}, #{blockHeight,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{spendTxid,jdbcType=CHAR}, #{scriptPubKey,jdbcType=LONGVARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.btc.demo.domain.BTCDefaultUTXO">
    insert into btc_default_utxo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txid != null">
        txid,
      </if>
      <if test="vout != null">
        vout,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="blockHeight != null">
        block_height,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="spendTxid != null">
        spend_txid,
      </if>
      <if test="scriptPubKey != null">
        script_pub_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txid != null">
        #{txid,jdbcType=CHAR},
      </if>
      <if test="vout != null">
        #{vout,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blockHeight != null">
        #{blockHeight,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="spendTxid != null">
        #{spendTxid,jdbcType=CHAR},
      </if>
      <if test="scriptPubKey != null">
        #{scriptPubKey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.btc.demo.domain.BTCDefaultUTXO">
    update btc_default_utxo
    <set>
      <if test="count != null">
        count = #{count,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blockHeight != null">
        block_height = #{blockHeight,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="spendTxid != null">
        spend_txid = #{spendTxid,jdbcType=CHAR},
      </if>
      <if test="scriptPubKey != null">
        script_pub_key = #{scriptPubKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where txid = #{txid,jdbcType=CHAR}
      and vout = #{vout,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.btc.demo.domain.BTCDefaultUTXO">
    update btc_default_utxo
    set count = #{count,jdbcType=DECIMAL},
      address = #{address,jdbcType=CHAR},
      sync_time = #{syncTime,jdbcType=TIMESTAMP},
      block_height = #{blockHeight,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      spend_txid = #{spendTxid,jdbcType=CHAR},
      script_pub_key = #{scriptPubKey,jdbcType=LONGVARCHAR}
    where txid = #{txid,jdbcType=CHAR}
      and vout = #{vout,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.btc.demo.domain.BTCDefaultUTXO">
    update btc_default_utxo
    set count = #{count,jdbcType=DECIMAL},
      address = #{address,jdbcType=CHAR},
      sync_time = #{syncTime,jdbcType=TIMESTAMP},
      block_height = #{blockHeight,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      spend_txid = #{spendTxid,jdbcType=CHAR}
    where txid = #{txid,jdbcType=CHAR}
      and vout = #{vout,jdbcType=INTEGER}
  </update>
</mapper>